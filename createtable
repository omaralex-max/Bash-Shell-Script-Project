#!/bin/bash    

#validation function
validate_field_input() {
           if [[ ! $1 =~ ^[A-Za-z_][A-Za-z0-9_]*$ ]]; then
              return 1
           else
              return 0
           fi
}


while true; 
do
    read -p "please enter table name: " table_name

    if validate_field_input "$table_name"; then
        break
    else
        echo "Invalid table name. please remove any numbers or special characters"
    fi
    
done


meta_data=$table_name@meta_data



if [ -d ./$table_name ]
then
    echo
    echo "Table Exists"
else
    touch ./$table_name
    touch ./$meta_data 
    echo
    echo "Table Created"
    
     
    

    read -p "please type number of fields: " fields_no 
    
    #creating fields
for ((c = 1; c <= $fields_no; ((c++)))); 
    do
      echo "Please enter Field no.$c Name: "
       read field
        

        if [ $c = $fields_no ];
        
         then
            echo -n "$field" >> ./$meta_data
        else
            echo -n "$field:" >> ./$meta_data
            
        fi
    done
    
     #checking for primary key
while true;
    do
      read -p "Do you want to specify a primary key for this table? (yes/no): " primary_key
        case $primary_key in
            yes)
                read -p "Please enter the primary key field name: " pk_field
                echo -n "@PK.$pk_field:" >> ./$meta_data
                break
                ;;
            no)
                break
                ;;
            *)
                echo "Please answer yes or no."
                ;;
        esac
     done
        
        ##
    
        echo >>./$meta_data

    

    for ((i = 1; i <= $fields_no; ((i++)))); 
    
    
    #read data type for each input field
      do
        echo "Enter Field no.$i Datatype: "
    
       if [ $i = $fields_no ]; then
            select datatype in "int" "varchar" "Exit"; do
                case $datatype in
                "int" | "varchar")
                    echo -n "$datatype" >> ./$meta_data
                    break
                    ;;
                "Exit") echo "Switched To Table Menu , Please Press Enter To Show Menu " ; break ;;
                *) echo $REPLY is not one of the choices. ;;
                esac
            done
        else
            select datatype in "int" "varchar" "Exit"; do
                case $datatype in
                "int" | "varchar" )
                    echo -n "$datatype:" >>./$meta_data
                    break
                    ;;
                "Exit")  break ;;
                *) echo $REPLY is invalid. please try again ;;
                esac
            done
        fi
    done

fi


